# RTM LAMP parameters

record(bi,"$(P)$(R)PSStatus-Mon"){
    field(DTYP,"asynInt32")
    field(DESC,"get rtm lamp status register")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),0)PS_STATUS")
}

record(mbbi,"$(S)$(RTM_CHAN)PSAmpOverCurrFlagL-Mon"){
    field(DTYP,"asynInt32")
    field(DESC,"get amplifier left overcurrent flag")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR))AMP_IFLAG_L")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"ok")
    field(ONST,"over")
}

record(mbbi,"$(S)$(RTM_CHAN)PSAmpOverTempFlagL-Mon"){
    field(DTYP,"asynInt32")
    field(DESC,"get amplifier left overtemperature flag")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR))AMP_TFLAG_L")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"ok")
    field(ONST,"over")
}

record(mbbi,"$(S)$(RTM_CHAN)PSAmpOverCurrFlagR-Mon"){
    field(DTYP,"asynInt32")
    field(DESC,"get amplifier right overcurrent flag")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR))AMP_IFLAG_R")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"ok")
    field(ONST,"over")
}

record(mbbi,"$(S)$(RTM_CHAN)PSAmpOverTempFlagR-Mon"){
    field(DTYP,"asynInt32")
    field(DESC,"get amplifier right overtemperature flag")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR))AMP_TFLAG_R")
    field(NOBT,"1")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"ok")
    field(ONST,"over")
}

record(calcout, "$(S)$(RTM_CHAN)AlarmsAmp-Mon"){
    field(DESC, "Over-temperature and over-current flags")
    field(SCAN, "Passive")
    field(INPA, "$(S)$(RTM_CHAN)PSAmpOverCurrFlagL-Mon CP")
    field(INPB, "$(S)$(RTM_CHAN)PSAmpOverTempFlagL-Mon CP")
    field(INPC, "$(S)$(RTM_CHAN)PSAmpOverCurrFlagR-Mon CP")
    field(INPD, "$(S)$(RTM_CHAN)PSAmpOverTempFlagR-Mon CP")
    field(CALC, "(D<<3)|(C<<2)|(B<<1)|A")
    field(HIHI, "1")
    field(HHSV, "MAJOR")
}

record(waveform, "$(S)$(RTM_CHAN)AlarmsAmp-Cte"){
    field(DESC, "Labels for each bit in AlarmsAmp-Mon")
    field(FTVL, "STRING")
    field(NELM, "4")
}

record(mbbo,"$(S)$(RTM_CHAN)PwrState-Sel"){
    field(DTYP,"asynInt32")
    field(DESC,"set amplifier enable status")
    field(SCAN,"Passive")
    field(OUT,"@asyn($(PORT),$(ADDR))AMP_EN")
    field(PINI,"YES")
    field(NOBT,"0")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"disabled")
    field(ONST,"enabled")
}
record(mbbi,"$(S)$(RTM_CHAN)PwrState-Sts"){
    field(DTYP,"asynInt32")
    field(DESC,"get amplifier enable status")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR))AMP_EN")
    field(NOBT,"0")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"disabled")
    field(ONST,"enabled")
}

record(mbbo,"$(S)$(RTM_CHAN)CurrLoopMode-Sel"){
    field(DTYP,"asynInt32")
    field(DESC,"set power supply mode")
    field(SCAN,"Passive")
    field(OUT,"@asyn($(PORT),$(ADDR))MODE")
    field(PINI,"YES")
    field(NOBT,"0")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(FRVL,"4")
    field(ZRST,"open_loop_manual")
    field(ONST,"open_loop_test_sqr")
    field(TWST,"closed_loop_manual")
    field(THST,"closed_loop_test_sqr")
    field(FRST,"closed_loop_fofb")
}
record(mbbi,"$(S)$(RTM_CHAN)CurrLoopMode-Sts"){
    field(DTYP,"asynInt32")
    field(DESC,"get power supply mode")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR))MODE")
    field(NOBT,"0")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(TWVL,"2")
    field(THVL,"3")
    field(FRVL,"4")
    field(ZRST,"open_loop_manual")
    field(ONST,"open_loop_test_sqr")
    field(TWST,"closed_loop_manual")
    field(THST,"closed_loop_test_sqr")
    field(FRST,"closed_loop_fofb")
}

record(longout,"$(S)$(RTM_CHAN)CurrLoopKp-SP"){
    field(DTYP,"asynInt32")
    field(DESC,"set PI Kp parameter")
    field(SCAN,"Passive")
    field(OUT,"@asyn($(PORT),$(ADDR))PI_KP")
    field(PINI,"YES")
    field(DRVH,"67108863")
    field(DRVL,"0")
}
record(longin,"$(S)$(RTM_CHAN)CurrLoopKp-RB"){
    field(DTYP,"asynInt32")
    field(DESC,"get PI Kp parameter")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR))PI_KP")
}

record(longout,"$(S)$(RTM_CHAN)CurrLoopTi-SP"){
    field(DTYP,"asynInt32")
    field(DESC,"set PI Ti parameter")
    field(SCAN,"Passive")
    field(OUT,"@asyn($(PORT),$(ADDR))PI_TI")
    field(PINI,"YES")
    field(DRVH,"67108863")
    field(DRVL,"0")
}
record(longin,"$(S)$(RTM_CHAN)CurrLoopTi-RB"){
    field(DTYP,"asynInt32")
    field(DESC,"get PI Ti parameter")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR))PI_TI")
}

record(longout,"$(S)$(RTM_CHAN)TestWavePeriod-SP"){
    field(DTYP,"asynInt32")
    field(DESC,"set sqr wave test period in 10ns steps")
    field(SCAN,"Passive")
    field(OUT,"@asyn($(PORT),$(ADDR))CNT")
    field(PINI,"YES")
    field(DRVH,"4194303")
    field(DRVL,"0")
}
record(longin,"$(S)$(RTM_CHAN)TestWavePeriod-RB"){
    field(DTYP,"asynInt32")
    field(DESC,"get sqr wave test period in 10ns steps")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR))CNT")
}

record(longout,"$(S)$(RTM_CHAN)TestLimA-SP"){
    field(DTYP,"asynInt32")
    field(DESC,"set square wave test limit A")
    field(SCAN,"Passive")
    field(OUT,"@asyn($(PORT),$(ADDR))LIMIT_A")
    field(PINI,"YES")
    field(DRVH,"32767")
    field(DRVL,"-32768")
}
record(longin,"$(S)$(RTM_CHAN)TestLimA-RB"){
    field(DTYP,"asynInt32")
    field(DESC,"get square wave test limit A")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR))LIMIT_A")
}

record(longout,"$(S)$(RTM_CHAN)TestLimB-SP"){
    field(DTYP,"asynInt32")
    field(DESC,"set square wave test limit B")
    field(SCAN,"Passive")
    field(OUT,"@asyn($(PORT),$(ADDR))LIMIT_B")
    field(PINI,"YES")
    field(DRVH,"32767")
    field(DRVL,"-32768")
}

record(longin,"$(S)$(RTM_CHAN)TestLimB-RB"){
    field(DTYP,"asynInt32")
    field(DESC,"get square wave test limit B")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR))LIMIT_B")
}

record(ao, "$(S)$(RTM_CHAN)CurrGain-SP"){
    field(DESC, "Current gain")
    field(SCAN, "Passive")
    field(VAL, "1")
}
record(longout, "$(S)$(RTM_CHAN)CurrOffset-SP"){
    field(DESC, "Current offset")
    field(SCAN, "Passive")
    field(VAL, "0")
}
record(ao, "$(S)$(RTM_CHAN)VoltGain-SP"){
    field(DESC, "Voltage gain")
    field(SCAN, "Passive")
    field(VAL, "1")
}
record(longout, "$(S)$(RTM_CHAN)VoltOffset-SP"){
    field(DESC, "Voltage offset")
    field(SCAN, "Passive")
    field(VAL, "0")
}

record(ao,"$(S)$(RTM_CHAN)Current-SP"){
    field(DESC,"set manual current control")
    field(EGU, "A")
    field(PINI,"YES")
    field(SCAN,"Passive")
    field(DRVH,"0.95")
    field(DRVL,"-0.95")
}

record(calcout,"$(S)$(RTM_CHAN)CurrentConvSP"){
    field(SCAN,"Passive")
    field(INPA,"$(S)$(RTM_CHAN)Current-SP CP")
    field(INPB,"$(S)$(RTM_CHAN)CurrGain-SP CP")
    field(INPC,"$(S)$(RTM_CHAN)CurrOffset-SP CP")
    field(CALC,"A/B+C")
    field(OUT,"$(S)$(RTM_CHAN)CurrentRaw-SP CA")
}

record(longout,"$(S)$(RTM_CHAN)CurrentRaw-SP"){
    field(DTYP,"asynInt32")
    field(DESC,"set manual current control (raw)")
    field(SCAN,"Passive")
    field(DRVH,"15200")
    field(DRVL,"-15200")
    field(OUT,"@asyn($(PORT),$(ADDR))PI_SP")
    field(PINI,"YES")
}
record(longin,"$(S)$(RTM_CHAN)CurrentRaw-RB"){
    field(DTYP,"asynInt32")
    field(DESC,"get manual current control (raw)")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR))PI_SP")
}

record(calcout,"$(S)$(RTM_CHAN)CurrentRawPropagateSP"){
    field(SCAN,"Passive")
    field(INPA,"$(S)$(RTM_CHAN)CurrentRaw-SP CP")
    field(INPB,"$(S)$(RTM_CHAN)CurrGain-SP")
    field(INPC,"$(S)$(RTM_CHAN)CurrOffset-SP")
    field(CALC,"B*(A-C)")
    field(OUT,"$(S)$(RTM_CHAN)Current-SP NPP")
}

record(calc,"$(S)$(RTM_CHAN)Current-RB"){
    field(DESC,"get manual current control")
    field(EGU, "A")
    field(SCAN,"Passive")
    field(INPA,"$(S)$(RTM_CHAN)CurrentRaw-RB CP")
    field(INPB,"$(S)$(RTM_CHAN)CurrGain-SP CP")
    field(INPC,"$(S)$(RTM_CHAN)CurrOffset-SP CP")
    field(CALC,"B*(A-C)")
}

record(ao,"$(S)$(RTM_CHAN)Voltage-SP"){
    field(DESC,"set manual voltage control")
    field(EGU, "V")
    field(PINI,"YES")
    field(SCAN,"Passive")
}

record(calcout,"$(S)$(RTM_CHAN)VoltageConvSP"){
    field(SCAN,"Passive")
    field(INPA,"$(S)$(RTM_CHAN)Voltage-SP CP")
    field(INPB,"$(S)$(RTM_CHAN)VoltGain-SP CP")
    field(INPC,"$(S)$(RTM_CHAN)VoltOffset-SP CP")
    field(CALC,"A/B+C")
    field(OUT,"$(S)$(RTM_CHAN)VoltageRaw-SP CA")
}

record(longout,"$(S)$(RTM_CHAN)VoltageRaw-SP"){
    field(DTYP,"asynInt32")
    field(DESC,"set manual voltage control (raw)")
    field(SCAN,"Passive")
    field(OUT,"@asyn($(PORT),$(ADDR))DAC")
    field(PINI,"YES")
    field(DRVH,"32767")
    field(DRVL,"-32768")
}
record(longin,"$(S)$(RTM_CHAN)VoltageRaw-RB"){
    field(DTYP,"asynInt32")
    field(DESC,"get manual voltage control (raw)")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR))DAC")
}

record(calcout,"$(S)$(RTM_CHAN)VoltageRawPropagateSP"){
    field(SCAN,"Passive")
    field(INPA,"$(S)$(RTM_CHAN)VoltageRaw-SP CP")
    field(INPB,"$(S)$(RTM_CHAN)VoltGain-SP")
    field(INPC,"$(S)$(RTM_CHAN)VoltOffset-SP")
    field(CALC,"B*(A-C)")
    field(OUT,"$(S)$(RTM_CHAN)Voltage-SP NPP")
}


record(calc,"$(S)$(RTM_CHAN)Voltage-RB"){
    field(DESC,"get manual voltage control")
    field(EGU, "V")
    field(SCAN,"Passive")
    field(INPA,"$(S)$(RTM_CHAN)VoltageRaw-RB CP")
    field(INPB,"$(S)$(RTM_CHAN)VoltGain-SP CP")
    field(INPC,"$(S)$(RTM_CHAN)VoltOffset-SP CP")
    field(CALC,"B*(A-C)")
}

record(longin,"$(S)$(RTM_CHAN)CurrentRaw-Mon"){
    field(DTYP,"asynInt32")
    field(DESC,"get current monitor (raw)")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR))ADC_INST")
}

record(calc,"$(S)$(RTM_CHAN)Current-Mon"){
    field(DESC,"monitor current")
    field(EGU, "A")
    field(SCAN,"Passive")
    field(INPA,"$(S)$(RTM_CHAN)CurrentRaw-Mon CP")
    field(INPB,"$(S)$(RTM_CHAN)CurrGain-SP CP")
    field(INPC,"$(S)$(RTM_CHAN)CurrOffset-SP CP")
    field(CALC,"B*(A-C)")
}

record(longin,"$(S)$(RTM_CHAN)VoltageRaw-Mon"){
    field(DTYP,"asynInt32")
    field(DESC,"get voltage monitor (raw)")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR))DAC_EFF")
}

record(calc,"$(S)$(RTM_CHAN)Voltage-Mon"){
    field(DESC,"get voltage monitor")
    field(EGU, "V")
    field(SCAN,"Passive")
    field(INPA,"$(S)$(RTM_CHAN)VoltageRaw-Mon CP")
    field(INPB,"$(S)$(RTM_CHAN)VoltGain-SP CP")
    field(INPC,"$(S)$(RTM_CHAN)VoltOffset-SP CP")
    field(CALC,"B*(A-C)")
}

record(longin,"$(S)$(RTM_CHAN)CurrentRawRef-Mon"){
    field(DTYP,"asynInt32")
    field(DESC,"get current reference monitor (raw)")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR))SP_EFF")
}

record(calc,"$(S)$(RTM_CHAN)CurrentRef-Mon"){
    field(DESC,"get current monitor")
    field(EGU, "A")
    field(SCAN,"Passive")
    field(INPA,"$(S)$(RTM_CHAN)CurrentRawRef-Mon CP")
    field(INPB,"$(S)$(RTM_CHAN)CurrGain-SP CP")
    field(INPC,"$(S)$(RTM_CHAN)CurrOffset-SP CP")
    field(CALC,"B*(A-C)")
}

record(mbbo,"$(S)$(RTM_CHAN)TrigEn-Sel"){
    field(DTYP,"asynInt32")
    field(DESC,"set trigger enable status")
    field(SCAN,"Passive")
    field(OUT,"@asyn($(PORT),$(ADDR))TRIG_EN")
    field(PINI,"YES")
    field(NOBT,"0")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"disable")
    field(ONST,"enable")
}
record(mbbi,"$(S)$(RTM_CHAN)TrigEn-Sts"){
    field(DTYP,"asynInt32")
    field(DESC,"get trigger enable status")
    field(SCAN,"I/O Intr")
    field(INP,"@asyn($(PORT),$(ADDR))TRIG_EN")
    field(NOBT,"0")
    field(ZRVL,"0")
    field(ONVL,"1")
    field(ZRST,"disable")
    field(ONST,"enable")
}
